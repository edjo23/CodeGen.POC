/*
 * This file is automatically generated; any changes will be lost. 
 */

#nullable enable

using Beef.Entities;
using Demo.Service.Common.Entities;
using System;
using System.Threading.Tasks;

namespace Demo.Service.Business.Data
{
    public partial class PersonData : IPersonData
    {
        private PersonData(IDataStorage dataStorage)
        {
            _dataStorage = dataStorage;
        }

        private readonly IDataStorage _dataStorage;

        public Task<Person> CreateAsync(Person value)
        {
            value.Id = Guid.NewGuid();
            _dataStorage.Write(value);
            return Task.FromResult(value);
        }

        public Task<Person?> GetAsync(Guid id)
        {
            return Task.FromResult<Person?>(_dataStorage.Read<Person>(id));
        }

        public Task<Person> UpdateAsync(Person value)
        {
            _dataStorage.Write(value);
            return Task.FromResult(value);
        }

        public Task DeleteAsync(Guid id)
        {
            _dataStorage.Delete(_dataStorage.Read<Person>(id));
            return Task.CompletedTask;
        }

        public Task<PersonCollectionResult> GetByArgsAsync(PersonArgs args, PagingArgs? pagingArgs)
        {
            return Task.FromResult<PersonCollectionResult>(new PersonCollectionResult(_dataStorage.Read<Person>()));
        }
    }
}

#nullable restore
