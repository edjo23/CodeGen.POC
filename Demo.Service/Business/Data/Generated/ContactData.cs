/*
 * This file is automatically generated; any changes will be lost. 
 */

#nullable enable

using Demo.Service.Common.Entities;
using System;
using System.Threading.Tasks;

namespace Demo.Service.Business.Data
{
    public partial class ContactData : IContactData
    {
        public ContactData(IDataStorage dataStorage)
        {
            _dataStorage = dataStorage;
        }

        private readonly IDataStorage _dataStorage;

        public Task<Contact> CreateAsync(Contact value)
        {
            value.Id = Guid.NewGuid();
            _dataStorage.Write(value);
            return Task.FromResult(value);
        }

        public Task<Contact?> GetAsync(Guid id)
        {
            return Task.FromResult<Contact?>(_dataStorage.Read<Contact>(id));
        }

        public Task<Contact> UpdateAsync(Contact value)
        {
            _dataStorage.Write(value);
            return Task.FromResult(value);
        }

        public Task DeleteAsync(Guid id)
        {
            _dataStorage.Delete(_dataStorage.Read<Contact>(id));
            return Task.CompletedTask;
        }

        public Task<ContactCollection> GetCollAsync()
        {
            return Task.FromResult<ContactCollection>(new ContactCollection(_dataStorage.Read<Contact>()));
        }
    }
}

#nullable restore
